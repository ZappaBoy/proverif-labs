pred c/1 elimVar,decompData.
nounif c:x.

fun pk/1.
fun aencrypt/2.
fun sencrypt/2.

query c:secret[].

reduc
(* Initialization *)

c:c[];
c:k[];
c:pk(sA[]);
c:pk(sB[]); 					(*(1) il cancale conosce l'identitÃ  di B *)

(* The attacker *)

c:x & c:aencrypt(m,pk(x)) -> c:m;
c:x & c:sencrypt(m,x) -> c:m; 		(*(4) l'attaccante riceve secret[] *)
c:x -> c:pk(x);
c:x & c:y -> c:aencrypt(x,y); 		(*(2) l'attaccante usa aencrypt(k, pk(sB[])) per inviare una chiave di cifratura fingendosi A *)

(* The protocol *)
(* A *)
c:k[] & c:pk(x) -> c:aencrypt(k[], pk(x));

(* B *)
c:aencrypt(k, pk(sB[])) -> c:sencrypt(secret[], k). (*(3) B riceve la chiave dall'attaccante e risponde con il secret[] cifrato *)

(* EXPECTPV
RESULT goal reachable: c:secret[]
*)
